@import 'tailwindcss';

/* Dark mode colors. */
:root {
    --backdrop-color: #00070dcc;
    --sl-color-accent: #00AEEF;
    --sl-color-accent-high: #78d0f0;
    --sl-color-accent-low: #0083b3;
    --sl-color-black: #011427;
    --sl-color-gray-1: #f9fafb;
    --sl-color-gray-2: #d1d5db;
    --sl-color-gray-3: #6b7280;
    --sl-color-gray-4: #374151;
    --sl-color-gray-5: #011427;
    --sl-color-gray-6: #00070d;
    --sl-color-white: #fff;
    --list-marker-color: #EC008C;
    --sl-color-hairline: #6b7280;
    --sl-color-bg-box: #022241;
    --sl-color-bg-tip: #04305A;
    --sl-color-tip: #fff;
    --sl-color-tip-icon: #EC008C;
}

/* Light mode colors. */
:root[data-theme="light"] {
    --backdrop-color: #f6f6f699;
    --sl-color-accent: #00AEEF;
    --sl-color-accent-high: #0083b3;
    --sl-color-accent-low: #78d0f0;
    --sl-color-black: #fff;
    --sl-color-gray-1: #000000;
    --sl-color-gray-2: #383838;
    --sl-color-gray-3: #585858;
    --sl-color-gray-4: #8b8b8b;
    --sl-color-gray-5: #c2c2c2;
    --sl-color-gray-6: #eee;
    --sl-color-gray-7: #f6f6f6;
    --sl-color-white: #000000;
    --list-marker-color: #00AEEF;
    --sl-color-hairline: #c2c2c2;
    --sl-color-bg-box: #fff;
    --sl-color-bg-tip: #fad4eb;
    --sl-color-tip: #383838;
    --sl-color-tip-icon: #EC008C;
}

header {
    /*backdrop-filter: blur(12px) !important;
    background-color: var(--backdrop-color) !important;*/
}

select {
    background-image: none;
    box-shadow: none;
}

select:focus-visible {
    outline: -webkit-focus-ring-color auto 1px;
}

article.card {
    border-radius: 0.5rem;
    border: 1px solid var(--sl-color-gray-5);
    background-color: var(--sl-color-bg-box);
}

.starlight-aside--tip {
    background-color: var(--sl-color-bg-tip);
    border: none;
    border-radius: 0.5rem;
    color: var(--sl-color-white);
}

.starlight-aside--note {
    background: linear-gradient(45deg, #00b4db, #2193b0);
    border: none;
    border-radius: 0.5rem;
    color: #004558;
}

.starlight-aside__icon {
    transform: scale(0.8);
}

.starlight-aside--tip .starlight-aside__title {
    color: var(--sl-color-tip);
}

.starlight-aside--tip .starlight-aside__title svg {
    color: var(--sl-color-tip-icon);
}

.starlight-aside--note .starlight-aside__title {
    color: #bbf3fef7;
}

.sl-link-card {
    background-color: var(--sl-color-bg-box);
}

footer .pagination-links a {
    background-color: var(--sl-color-bg-box);
}

/* Lists */
.sl-markdown-content ul:not(:where(.not-content *)) {
    list-style-type: none;
    padding-left: 0;
}

.sl-markdown-content ul:not(:where(.not-content *)) > li {
    padding-left: 1.75rem;
    position: relative;
}

.sl-markdown-content li:not(:where(.not-content *)) > ul,
.sl-markdown-content ul li + li:not(:where(.not-content *)) {
    margin-top: 0.625rem;
}

.sl-markdown-content ul:not(:where(.not-content *)) > li:before {
    background: var(--list-marker-color);
    border-radius: 1px;
    content: "";
    height: 2px;
    left: 2px;
    position: absolute;
    top: 13px;
    width: 0.875rem;
}

/* Ordered Lists */
.sl-markdown-content ol:not(:where(.not-content *), .sl-steps) {
    --bullet-size: calc(var(--sl-line-height) * 1rem - 1px);
    --bullet-margin: 0.375rem;

    list-style: none;
    counter-reset: steps-counter 0;
    padding-inline-start: 0;
}

.sl-markdown-content ol:not(:where(.not-content *), .sl-steps) > li {
    counter-increment: steps-counter;
    position: relative;
    padding-inline-start: calc(var(--bullet-size) + 1rem);
    /* HACK: Keeps any `margin-bottom` inside the `<li>`’s padding box to avoid gaps in the hairline border. */
    padding-bottom: 1px;
    /* Prevent bullets from touching in short list items. */
    min-height: calc(var(--bullet-size) + var(--bullet-margin));
}

.sl-markdown-content ol li + li:not(:where(.not-content *)) {
    /* Remove margin between steps. */
    margin-top: 0;
}

.sl-markdown-content li:not(:where(.not-content *)) > ol {
    margin-top: 0.625rem;
}

.sl-markdown-content ol:not(:where(.not-content *), .sl-steps) > li:before {
    content: counter(steps-counter);
    position: absolute;
    top: 0;
    inset-inline-start: 0;
    width: var(--bullet-size);
    height: var(--bullet-size);
    line-height: var(--bullet-size);

    font-size: var(--sl-text-xs);
    font-weight: 600;
    text-align: center;
    color: var(--list-marker-color);
    border: 1px solid var(--list-marker-color);
    border-radius: 99rem;
    box-shadow: none;
}

/* Vertical guideline linking list numbers. */
.sl-markdown-content ol:not(:where(.not-content *), .sl-steps) > li:after {
    --guide-width: 1px;
    content: '';
    position: absolute;
    top: calc(var(--bullet-size) + var(--bullet-margin));
    bottom: var(--bullet-margin);
    inset-inline-start: calc((var(--bullet-size) - var(--guide-width)) / 2);
    width: var(--guide-width);
    background-color: var(--sl-color-hairline-light);
}

/* Adjust first item inside a step so that it aligns vertically with the number
        even if using a larger font size (e.g. a heading) */
.sl-markdown-content ol:not(:where(.not-content *), .sl-steps) > li > :first-child {
    /*
    The `lh` unit is not yet supported by all browsers in our support matrix
    — see https://caniuse.com/mdn-css_types_length_lh
    In unsupported browsers we approximate this using our known line-heights.
    */
    --lh: calc(1em * var(--sl-line-height));
    --shift-y: calc(0.5 * (var(--bullet-size) - var(--lh)));
    transform: translateY(var(--shift-y));
    margin-bottom: var(--shift-y);
}
.sl-markdown-content ol:not(:where(.not-content *), .sl-steps) > li > :first-child:where(h1, h2, h3, h4, h5, h6) {
    --lh: calc(1em * var(--sl-line-height-headings));
}
@supports (--prop: 1lh) {
    .sl-markdown-content ol:not(:where(.not-content *), .sl-steps) > li > :first-child {
        --lh: 1lh;
    }
}

/* TODO: move to sth else later */
html:not([data-has-toc]) {
    --sl-mobile-toc-height: 0rem;
}
html:not([data-has-sidebar]) {
    --sl-content-width: 67.5rem;
}
/* Add scroll padding to ensure anchor headings aren't obscured by nav */
html {
    /* Additional padding is needed to account for the mobile TOC */
    scroll-padding-top: calc(1.5rem + var(--sl-nav-height) + var(--sl-mobile-toc-height));
}
main {
    padding-bottom: 3vh;
}
@media (min-width: 50em) {
    [data-has-sidebar] {
        --sl-content-inline-start: var(--sl-sidebar-width);
    }
}
@media (min-width: 72em) {
    html {
        scroll-padding-top: calc(1.5rem + var(--sl-nav-height));
    }
}

.page {
    flex-direction: column;
    min-height: 100vh;
}

:global([data-has-sidebar]) .header {
    padding-inline-end: calc(var(--sl-nav-gap) + var(--sl-nav-pad-x) + var(--sl-menu-button-size));
}

.sidebar-pane {
    visibility: var(--sl-sidebar-visibility, hidden);
    position: fixed;
    z-index: var(--sl-z-index-menu);
    inset-block: var(--sl-nav-height) 0;
    inset-inline-start: 0;
    width: 100%;
    background-color: var(--sl-color-black);
    overflow-y: auto;
}

:global([aria-expanded='true']) ~ .sidebar-pane {
    --sl-sidebar-visibility: visible;
}

.sidebar-content {
    height: 100%;
    min-height: max-content;
    padding: 1rem var(--sl-sidebar-pad-x) 0;
    flex-direction: column;
    gap: 1rem;
}

@media (min-width: 50rem) {
    .sidebar-content::after {
        content: '';
        padding-bottom: 1px;
    }
}

.main-frame {
    padding-top: calc(var(--sl-nav-height) + var(--sl-mobile-toc-height));
    padding-inline-start: var(--sl-content-inline-start);
}

@media (min-width: 50rem) {
    :global([data-has-sidebar]) .header {
        padding-inline-end: var(--sl-nav-pad-x);
    }
    .sidebar-pane {
        --sl-sidebar-visibility: visible;
        width: var(--sl-sidebar-width);
        background-color: var(--sl-color-bg-sidebar);
        border-inline-end: 1px solid var(--sl-color-hairline-shade);
    }
}
