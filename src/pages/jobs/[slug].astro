---
import MainLayout from '../../layouts/MainLayout.astro';
import MainSection from "../../components/ui/blocks/MainSection.astro";
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import { hasSprykerCertifications, generateNameSlug } from '../../utils/utils.js';
import { Icon } from 'astro-icon/components'; // social icons
import CQIcon from '@components/ui/icons/CQIcon.astro';
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import Flag from '@components/ui/Flag.astro';
import { createReader } from '@keystatic/core/reader';
import keystaticConfig from '../../../keystatic.config';
import type { Freelancer, KeystaticFreelancer } from '../../types.ts';

// Import all images at build time with proper typing
const imageFiles: Record<string, ImageMetadata> = import.meta.glob('/src/images/freelancers/**/*.{jpeg,jpg,png,gif}', {
  eager: true,
  import: 'default'
});

export async function getStaticPaths() {
  // Initialize Keystatic reader
  const reader = createReader(process.cwd(), keystaticConfig);

  // Get all freelancers from Keystatic
  const freelancerEntries = await reader.collections.freelancers.all();

  // Convert Keystatic entries to Freelancer type
  const freelancers: Freelancer[] = await Promise.all(
    freelancerEntries.map(async (entry) => {
      const content = await reader.collections.freelancers.readOrThrow(entry.slug) as unknown as KeystaticFreelancer;
      return {
        id: entry.slug,
        ...content,
        linkedIn: content.linkedIn || null,
        github: content.github || null,
        headline: content.headline || '',
        otherCertifications: content.otherCertifications || '',
        forumProfile: content.forumProfile || '',
        idealCustomer: content.idealCustomer || '',
        references: content.references || '',
      };
    })
  );

  return freelancers
    .filter(freelancer => freelancer.isVisible)
    .map((freelancer) => {
      const slug = generateNameSlug(freelancer.firstName, freelancer.lastName);
      return {
        params: { slug },
        props: { freelancer }
      };
    });
}

const { freelancer } = Astro.props;
const pageTitle = `${`${freelancer.firstName} ${freelancer.lastName}`} - Spryker Developer Profile`;

// Get certification status using the utility function
const hasCertifications = hasSprykerCertifications(freelancer.sprykerCertifications);

// Get the image from our glob
const freelancerImage: ImageMetadata | undefined = imageFiles[freelancer.photo];

//Get slug
const freelancerSlug = generateNameSlug(freelancer.firstName, freelancer.lastName);
---

<MainLayout
  title={pageTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "ProfilePage",
    "@id": `https://commercequest.space/jobs/${freelancerSlug}/`,
    "url": `https://commercequest.space/jobs/${freelancerSlug}/`,
    "name": `${`${freelancer.firstName} ${freelancer.lastName}`} - Spryker Developer Profile | CommerceQuest`,
    "description": `${freelancer.shortPitch}`,
    "isPartOf": {
      "@type": "WebSite",
      "url": "https://commercequest.space/",
      "name": "CommerceQuest",
      "description": "Commerce Resources for the driven Spryker, Propel & Oryx developer."
    },
    "inLanguage": "en-US"
  }}
>
<!-- Back to Job Overview Link -->
<div class="container mx-auto px-4 my-8">
  <a href="/jobs" class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200 flex items-center">
    <span class="mr-2" aria-hidden="true">&larr;</span>
    Back to Job Overview
  </a>
</div>
  <MainSection
    title={`${freelancer.firstName} ${freelancer.lastName}`}
    description={freelancer.shortPitch}
  />
  <div class="container mx-auto px-4 mb-10">
    <div class="bg-neutral-100 dark:bg-white/[.075] rounded-xl shadow-md overflow-hidden">
      <div class="md:flex">
        <div class="md:shrink-0">
          {freelancerImage ? (
            <Image 
              src={freelancerImage}
              alt={`${freelancer.firstName} ${freelancer.lastName}`}
              width={192}
              height={192}
              class="h-48 w-full object-cover md:w-48"
            />
          ) : (
            <div class="h-48 w-full md:w-48 bg-gray-200 dark:bg-gray-700 flex items-center justify-center">
              <span class="text-gray-500 dark:text-gray-400">Image not available</span>
            </div>
          )}
          <div class="flex items-center mb-4 mt-4 ml-3 gap-2">
            {freelancer.forumProfile && (
            <CQIcon profileUrl={freelancer.forumProfile} size="sm" />
            )}
            {freelancer.linkedIn && (
              <a href={freelancer.linkedIn} target="_blank" rel="noopener noreferrer" class="text-neutral-800 dark:text-neutral-100 inline-flex items-center">
                <Icon name="mdi:linkedin" class="w-6 h-6 mr-2" /> 
              </a>
            )}
            {freelancer.github && (
              <a href={freelancer.github} target="_blank" rel="noopener noreferrer" class="text-neutral-800 dark:text-neutral-100 inline-flex items-center">
                <Icon name="mdi:github" class="w-6 h-6 mr-2" /> 
              </a>
            )}
          </div>
          <div class="space-y-4 sm:flex-row sm:space-x-4 sm:space-y-0 m-2">
            <PrimaryCTA title={`Contact ${freelancer.firstName}`} url={`mailto:${freelancer.contact}`}/>
          </div>
        </div>
        <div class="p-8">
          <h2 class="text-2xl font-semibold mb-2 text-blue-500 dark:text-blue-400">{`Who's ${freelancer.firstName}`}?</h2>
          <p class="text-pink-500 dark:text-pink-400 mb-2">{freelancer.headline}</p>
          <p class="text-neutral-500 dark:text-neutral-500 mb-2">
            üìç {freelancer.location} <Flag countryCode={freelancer.countryCode} size="sm" class="ml-1" />
          </p>
          <p class="text-neutral-500 dark:text-neutral-500 mb-2">üó£Ô∏è {freelancer.language}</p>
          <div class="mb-4 text-neutral-500 dark:text-neutral-500">
            <p>Started web development in {freelancer.yearStartedWebDev}</p>
          </div>
          <div class="mb-4 text-neutral-500 dark:text-neutral-500">
            <h3 class="font-semibold mb-2 text-neutral-800 dark:text-neutral-100">Expertise / potential roles</h2>
            <div class="flex flex-wrap gap-2">
              {freelancer.skills.map((skill) => (
                <span class="bg-gray-200 rounded-full px-3 py-1 text-sm">{skill}</span>
              ))}
            </div>
          </div>
          <h2 class="text-2xl font-semibold mt-8 mb-2 text-blue-500 dark:text-blue-400">Relevant Spryker experience</h2>
          <div class="mb-4 text-neutral-500 dark:text-neutral-500">
            <p>Started with Spryker in {freelancer.yearStartedSpryker}</p>
          </div>
          {hasCertifications && (
            <div class="mb-4">
              <h3 class="text-lg font-semibold mb-2 text-neutral-800 dark:text-neutral-100">Spryker Certifications</h3>
              {freelancer.sprykerCertifications.backEndDeveloper && (
                <p class="text-sm text-neutral-500 dark:text-neutral-500">‚úì Certified Spryker Back End Developer</p>
              )}
              {freelancer.sprykerCertifications.solutionArchitect && (
                <p class="text-sm text-neutral-500 dark:text-neutral-500">‚úì Certified Spryker Solution Architect</p>
              )}
            </div>
          )}
          {freelancer.otherCertifications && (
            <div class="mb-4 text-neutral-500 dark:text-neutral-500">
              <h3 class="font-semibold mb-2 text-neutral-800 dark:text-neutral-100">Other Certifications</h2>
              <p>{freelancer.otherCertifications}</p>
            </div>
          )}

          {freelancer.references && (
            <div class="mb-4 text-neutral-500 dark:text-neutral-500">
              <h3 class="font-semibold mb-2 text-neutral-800 dark:text-neutral-100">Spryker References</h2>
              <div class="references" set:html={freelancer.references}></div>
            </div>
          )}
          <h2 class="text-2xl font-semibold mt-8 mb-2 text-blue-500 dark:text-blue-400">Your project with {freelancer.firstName}</h2>
            <p class="text-neutral-500 dark:text-neutral-500 mb-4">Potential start: {freelancer.availability}</p>
            {freelancer.timezoneRange && (
              <div class="mb-4 text-neutral-500 dark:text-neutral-500">
                <p>Working hour availability: {freelancer.timezoneRange}</p>
              </div>
            )}
            {freelancer.locationFlexibility && (
              <div class="mb-4 text-neutral-500 dark:text-neutral-500">
                <p>Location Flexibility: {freelancer.locationFlexibility}</p>
              </div>
            )}
          
            {freelancer.employmentType && (
              <div class="mb-4 text-neutral-500 dark:text-neutral-500">
                <p>Employment Type: {freelancer.employmentType}</p>
              </div>
            )}
            {freelancer.idealCustomer && (
              <div class="mb-4 text-neutral-500 dark:text-neutral-500">
                <h3 class="font-semibold mb-2 text-neutral-800 dark:text-neutral-100">Ideal Customer</h2>
                <div class="ideal-customer" set:html={freelancer.idealCustomer}></div>
              </div>
            )}
          {freelancer.contact && (
            <div class="mb-4 mt-8 text-neutral-500 dark:text-neutral-500">
              <h3 class="text-lg font-semibold mb-2 text-neutral-800 dark:text-neutral-100">Eager to get started?</h2>
              <p>Let's reach out: <a href={`mailto:${freelancer.contact}`}>{freelancer.contact}</a></p>
            </div>
          )}
        </div>
      </div>
    </div>
       <!-- Announcement Block -->
   <div class="bg-yellow-100 text-yellow-800 p-4 rounded-md mt-5 mb-10">
    <strong>‚ö†Ô∏è Note:</strong> The information above is provided by the person listed and - aside from possible Spryker Certifications - is not validated by CommerceQuest and/or Spryker. A listing on this page is NOT an endorsement from CommerceQuest and/or Spryker. Make sure to always do your own due dilligence when you hire someone.
  </div>
  </div>
</MainLayout>
