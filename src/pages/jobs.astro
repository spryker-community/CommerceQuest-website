---
import { Image } from 'astro:assets';
import MainLayout from '../layouts/MainLayout.astro';
import MainSection from "../components/ui/blocks/MainSection.astro";
import FreelancerCard from '../components/FreelancerCard.astro';
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import { createReader } from '@keystatic/core/reader';
import keystaticConfig from '../../keystatic.config';
import type { Freelancer, KeystaticFreelancer } from '../types.ts';
import { ensureFreelancerSlug } from '../utils/slugUtils';

const pageTitle = "Available Spryker Developers";

// Initialize Keystatic reader
const reader = createReader(process.cwd(), keystaticConfig);

// Get all freelancers from Keystatic
const freelancerEntries = await reader.collections.freelancers.all();

// Convert Keystatic entries to Freelancer type and ensure correct slugs
const freelancersWithErrors = await Promise.all(
  freelancerEntries.map(async (entry) => {
    try {
      const content = await reader.collections.freelancers.readOrThrow(entry.slug) as unknown as KeystaticFreelancer;
      
      // Validate required fields
      if (!content.firstName || !content.lastName) {
        console.error(`Invalid freelancer data for ${entry.slug}: Missing first name or last name`);
        return null;
      }

      // Generate and validate slug
      let slug: string;
      try {
        slug = ensureFreelancerSlug(content.firstName, content.lastName, entry.slug);
      } catch (error) {
        console.error(`Invalid slug for freelancer ${content.firstName} ${content.lastName}:`, error);
        return null;
      }

      // Create the freelancer object with all required fields
      const freelancer: Freelancer = {
        id: slug,
        firstName: content.firstName,
        lastName: content.lastName,
        photo: content.photo,
        availability: content.availability,
        location: content.location,
        countryCode: content.countryCode,
        language: content.language,
        shortPitch: content.shortPitch,
        sprykerCertifications: content.sprykerCertifications,
        skills: content.skills,
        timezoneRange: content.timezoneRange,
        yearStartedWebDev: content.yearStartedWebDev,
        yearStartedSpryker: content.yearStartedSpryker,
        contact: content.contact,
        isVisible: content.isVisible,
        // Optional fields with defaults
        linkedIn: content.linkedIn || null,
        github: content.github || null,
        headline: content.headline || '',
        otherCertifications: content.otherCertifications || '',
        forumProfile: content.forumProfile || '',
        idealCustomer: content.idealCustomer || '',
        references: content.references || '',
        locationFlexibility: content.locationFlexibility || '',
        employmentType: content.employmentType || ''
      };
      
      return freelancer;
    } catch (error) {
      console.error(`Error processing freelancer ${entry.slug}:`, error);
      return null;
    }
  })
);

// Filter out any null entries from errors
const freelancers = freelancersWithErrors.filter((entry): entry is Freelancer => entry !== null);

// Function to shuffle the freelancers array
function shuffle<T>(array: T[]): T[] {
  const shuffled = [...array];
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }
  return shuffled;
}

// Filter and shuffle visible freelancers
const visibleFreelancers = shuffle(
  freelancers.filter(freelancer => freelancer.isVisible)
);
---

<MainLayout
  title={pageTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "CollectionPage",
    "@id": "https://commercequest.space/jobs/",
    "url": "https://commercequest.space/jobs/",
    "name": "Available Freelancers | CommerceQuest",
    "description": "Find skilled freelancers for your Spryker, Propel & Oryx projects.",
    "isPartOf": {
      "@type": "WebSite",
      "url": "https://commercequest.space/",
      "name": "CommerceQuest",
      "description": "Commerce Resources for the driven Spryker, Propel & Oryx developer."
    },
    "inLanguage": "en-US"
  }}
>
  <MainSection
    title={pageTitle}
    description="Connect with skilled freelancers specializing in Spryker, Propel & Oryx development. Browse through our list of community professionals ready to contribute to your projects."
  />
  <!-- Announcement Block -->
  <div class="bg-yellow-100 text-yellow-800 p-4 rounded-md mb-10">
    ðŸ“¢ <strong>Note:</strong> This list and the information within is provided as-is. Being listed here is <strong>NOT</strong> an endorsement from Spryker.
  </div>
  <div class="container mx-auto px-4">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {visibleFreelancers.map((freelancer) => (
        <FreelancerCard freelancer={freelancer} />
      ))}
    </div>
    <h2 class="text-2xl font-semibold mt-10 mb-4 text-neutral-800 dark:text-neutral-200">Interested in being listed?</h2>
    <div class="flex flex-col space-y-4 sm:flex-row sm:space-x-4 sm:space-y-0 mb-10">
      <PrimaryCTA title="Send us your information" url="https://form.asana.com/?k=1IiJkdbe9fJwCPnSRihpuQ&d=21158181759478"/>
    </div>
  </div>
  <!-- Additional Information Block -->
  <div class="bg-yellow-100 text-yellow-800 p-4 rounded-md mb-10">
    <strong>Wondering how to get certified by Spryker?</strong>
    <p>Spryker offers developer certifications through Safari:
      <ol>
        <li>A) Backend Developer (2 exams)</li>
        <li>B) Solution Architect (1 exam)</li>
      </ol>
    </p>
    <br/>
    <p>Each certification costs â‚¬250 and is valid for one year. To access:</p>
    <ol>
      <li>1) Visit <a href="https://safari.spryker.com/" target="_blank">safari.spryker.com</a></li>
      <li>2) Register/login</li>
      <li>3) Non-customers/partners (e.g. freelancers) fill out an Asana form for eligibility review</li>
    </ol>
  </div>
</MainLayout>
