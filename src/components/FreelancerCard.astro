---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import { getFlagEmoji, hasSprykerCertifications } from '../utils/utils.js';
const { freelancer } = Astro.props;
import { Icon } from 'astro-icon/components'; // social icons
import CQIcon from '@components/ui/icons/CQIcon.astro';
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro";
import type { Freelancer } from '../types';

interface Props {
  freelancer: Freelancer;
}

// Define the type for a skill
type Skill = string;

// Get certification status using the utility function
const hasCertifications = hasSprykerCertifications(freelancer.sprykerCertifications);

// Import all images at build time with proper typing
const imageFiles: Record<string, ImageMetadata> = import.meta.glob('/src/images/freelancers/*.{jpeg,jpg,png,gif}', {
  eager: true,
  import: 'default'
});

const forumIconFiles: Record<string, ImageMetadata> = import.meta.glob('/src/images/cq.png', {
  eager: true,
  import: 'default'
});

// Get the forum icon image
const forumIcon = Object.values(forumIconFiles)[0];

// Add image import utility function
async function getFreelancerImage(photoPath: string) {
  try {
    const imageModule = await import(`../images/freelancers/${photoPath}`);
    return imageModule.default;
  } catch (error) {
    console.error(`Error loading image for ${photoPath}:`, error);
    return null;
  }
}

// Construct the correct image path
const imagePath = `/src/images/freelancers/${freelancer.photo}`;

// Get the image from our glob with type checking
const freelancerImage: ImageMetadata | undefined = imageFiles[imagePath];
---
<style>
.short-pitch {
  display: -webkit-box;         /* Required for the clamping */
  -webkit-line-clamp: 6;        /* Limits to 3 lines; change the number to adjust */
  -webkit-box-orient: vertical; /* Required for the clamping */
  overflow: hidden;             /* Hides the overflow */
  text-overflow: ellipsis;      /* Adds an ellipsis (...) at the end */
  max-height: 9em;              /* Approximate height for 3 lines (tune as needed) */
  line-height: 2em;             /* Set line-height to help calculate max-height */
}
</style>

<div class="bg-neutral-100 dark:bg-white/[.075] rounded-xl shadow-md overflow-hidden mb-10">
  <a href={`/jobs/${freelancer.id}`}>
    {freelancerImage ? (
      <Image 
        src={freelancerImage}
        alt={`${freelancer.firstName} ${freelancer.lastName}`}
        width={400}
        height={400}
        class="w-full h-48 object-cover"
      />
    ) : (
      <div class="w-full h-48 bg-gray-200 dark:bg-gray-700 flex items-center justify-center">
        <span class="text-gray-500 dark:text-gray-400">Image not available</span>
      </div>
    )}
  </a>
  <div class="p-6">
    <a href={`/jobs/${freelancer.id}`} class="group"> <!-- Added group for hover effect -->
      <h2 class="text-2xl font-semibold mb-2 text-blue-500 dark:text-blue-400 group-hover:text-blue-600 dark:group-hover:text-blue-300 transition-colors">
        {`${freelancer.firstName} ${freelancer.lastName}`}
      </h2>
    </a>    <p class="text-pink-500 dark:text-pink-400 mb-2">{freelancer.headline}</p>
    <p class="text-sm text-neutral-500 dark:text-neutral-500 mb-2">
      üìç {freelancer.location} {getFlagEmoji(freelancer.countryCode)}
    </p>
    <p class="text-sm text-neutral-500 dark:text-neutral-500 mb-2">üó£Ô∏è {freelancer.language}</p>
    <p class="text-sm text-neutral-500 dark:text-neutral-500 mb-6">Availability: {freelancer.availability}</p>
    <div class="flex items-center mb-4 mt-4 gap-2">
      <CQIcon profileUrl={freelancer.forumProfile} size="sm" />
      {freelancer.linkedIn && (
        <a href={freelancer.linkedIn} target="_blank" rel="noopener noreferrer" class="text-neutral-800 dark:text-neutral-100 inline-flex items-center">
          <Icon name="mdi:linkedin" class="w-6 h-6 mr-2" /> 
        </a>
      )}
      {freelancer.github && (
        <a href={freelancer.github} target="_blank" rel="noopener noreferrer" class="text-neutral-800 dark:text-neutral-100 inline-flex items-center">
          <Icon name="mdi:github" class="w-6 h-6 mr-2" /> 
        </a>
      )}
    </div>
    <div class="short-pitch mb-6">
      <p class="text-sm text-neutral-800 dark:text-neutral-100 mb-4">{freelancer.shortPitch}</p>
    </div>
    <div class="mb-4">
      <h3 class="text-lg font-semibold text-neutral-800 dark:text-neutral-100 mb-2">Role / Expertise</h3>
      <div class="flex flex-wrap gap-2">
        {freelancer.skills.map((skill: Skill) => (
            <span class="bg-gray-200 rounded-full px-3 py-1 text-sm">{skill}</span>
          ))}
      </div>
    </div>
    {hasCertifications && (
      <div class="mb-4">
        <h3 class="text-lg font-semibold mb-2 text-neutral-800 dark:text-neutral-100">Spryker Certifications</h3>
        {freelancer.sprykerCertifications.backEndDeveloper && (
          <p class="text-sm text-neutral-500 dark:text-neutral-500">‚úì Certified Spryker Back End Developer</p>
        )}
        {freelancer.sprykerCertifications.solutionArchitect && (
          <p class="text-sm text-neutral-500 dark:text-neutral-500">‚úì Certified Spryker Solution Architect</p>
        )}
      </div>
    )}
    <div class="mt-0 grid w-full gap-3 sm:inline-flex">
      <SecondaryCTA title={`View ${freelancer.firstName}'s job profile`} url={`/jobs/${freelancer.id}`}  />
    </div>
  </div>
</div>